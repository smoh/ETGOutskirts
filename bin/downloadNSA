#!/usr/bin/env python
""" Script to download NSA deblend, ivar, and psf images """

import urllib
import os, errno
from urllib2 import urlopen, URLError, HTTPError


def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc: # Python >2.5
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else: raise

def downloadfile(url, savename=None, prefix=None):
    """
    Download a file from url

    savename : target filename (default=basename of url)
    """
    if not savename:
        savename = os.path.basename(url)
    if not prefix:
        prefix = './'

    mkdir_p(prefix)
    try:
        f = urlopen(url)
        localname = prefix + '/' + savename
        if os.path.isfile(localname):
            pass
        else:
            # Open our local file for writing
            with open(localname, "wb") as local_file:
                local_file.write(f.read())
                local_file.close()

    #handle errors
    except HTTPError, e:
        print "HTTP Error:", e.code, url
    except URLError, e:
        print "URL Error:", e.reason, url


def download_sdss_psffile(rerun, run, camcol, field, prefix):
    """download sdss psf metadata file"""
    url = 'http://data.sdss3.org/sas/dr10/boss/photo/redux/%s/%i/objcs/%i/psField-%06i-%i-%04i.fit' % (
        rerun, run, camcol, run, camcol, field)
    downloadfile(url, prefix=prefix)


def download_sdss_field(filterstr, catalog, prefix):
    """ Download SDSS field images

    filterstr :  one of 'u', 'g', 'r', 'i', 'z'
    """
    from astropy.table import Table
    if catalog.endswith('.fits'):
        master = Table.read(catalog)
    # check if all columns needed exist
    for name in ['RERUN', 'RUN', 'CAMCOL', 'FIELD']:
        if not name in master.colnames:
            raise 'Column %s not found' % name
    import progressbar
    progress = progressbar.ProgressBar()
    for row in progress(master):
        rerun, run, camcol, field = row['RERUN'], row['RUN'], row['CAMCOL'], row['FIELD']
        url = "http://data.sdss3.org/sas/dr10/boss/photoObj/frames/%s/%i/%i/frame-%s-%06i-%i-%04i.fits.bz2" % (
                rerun, run, camcol, filterstr, run, camcol, field)
        downloadfile(url, prefix=prefix)


def download_sdss_psffileCatalog(catalog, prefix):
    """ Download SDSS psf metadata file for all galaxies in a catalog

    catalog : FITS or ascii catalog filename
    prefix : directory to save images
    """
    from astropy.table import Table
    if catalog.endswith('.fits'):
        master = Table.read(catalog)
    else:
        master = Table.read(catalog, format='ascii')
    # check if all columns needed exist
    for name in ['RERUN', 'RUN', 'CAMCOL', 'FIELD']:
        if not name in master.colnames:
            raise 'Column %s not found' % name
    import progressbar
    progress = progressbar.ProgressBar()
    for row in progress(master):
        download_sdss_psffile(row['RERUN'], row['RUN'], row['CAMCOL'], row['FIELD'], args.prefix)


def downloadNSA(subdir, iauname, pid, aid, prefix):
    """
    Download NSA child, parent, and psf images to be used in bdfitter
    Saved as
    prefix/
        images/ -- child images
        ivar/ -- parent images
        psf/ -- psf images
    """

    url = 'http://sdss.physics.nyu.edu/mblanton/v0/detect/v0_1/%s/' % (subdir)

    downloadfile(url + 'atlases/%s/%s-%s-atlas-%s.fits.gz' % (
        pid, iauname, pid, aid), prefix=prefix + '/images')
    downloadfile(url + 'parents/%s-parent-%s.fits.gz' % (
        iauname, pid), prefix=prefix + '/ivar')

    for band in ['u', 'g', 'r', 'i', 'z', 'fd','nd']:
        downloadfile('http://sdss.physics.nyu.edu/mblanton/v0/detect/v0_1/%s/%s-%s-bpsf.fits.gz' % (subdir, iauname, band), prefix=prefix+'/psf/')


def downloadNSACatalog(catalog, prefix):
    """
    Download all galaxy images in the catalog

    catalog : FITS or ascii catalog filename
    prefix : directory to save images
    """
    from astropy.table import Table
    if catalog.endswith('.fits'):
        master = Table.read(catalog)
    else:
        master = Table.read(catalog, format='ascii')
    # check if all columns needed exist
    for name in ['IAUNAME', 'SUBDIR', 'PID', 'AID']:
        if not name in master.colnames:
            raise 'Column %s not found' % name
    import progressbar
    progress = progressbar.ProgressBar()
    for row in progress(master):
        downloadNSA(row['SUBDIR'], row['IAUNAME'], row['PID'], row['AID'], args.prefix)


if __name__ == '__main__':

    import argparse, inspect
    parser = argparse.ArgumentParser(description='Download NSA/SDSS images')
    parser.add_argument('catalog', help='FITS catalog file (part of NSA)', type=str)
    parser.add_argument('prefix', help='directory prefix', type=str)
    parser.add_argument('kind', help='which files to download', nargs='+', type=str,
                        choices=['NSA', 'psField', 'u', 'g', 'r', 'i', 'z'])
    args = parser.parse_args()
    if 'NSA' in args.kind:
        print 'Downloading NSA files'
        downloadNSACatalog(args.catalog, args.prefix)
    if 'psField' in args.kind:
        print 'Downloading psField files'
        download_sdss_psffileCatalog(args.catalog, args.prefix)
    for filt in ['u','g','r','i','z']:
        if filt in args.kind:
            download_sdss_field(filt, args.catalog, args.prefix)



